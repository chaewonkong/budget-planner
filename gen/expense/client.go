// Code generated by goa v3.12.4, DO NOT EDIT.
//
// expense client
//
// Command:
// $ goa gen github.com/chaewonkong/budget-planner/design/expense

package expense

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Client is the "expense" service client.
type Client struct {
	AddExpenseEndpoint goa.Endpoint
}

// NewClient initializes a "expense" service client given the endpoints.
func NewClient(addExpense goa.Endpoint) *Client {
	return &Client{
		AddExpenseEndpoint: addExpense,
	}
}

// AddExpense calls the "AddExpense" endpoint of the "expense" service.
func (c *Client) AddExpense(ctx context.Context, p *AddExpensePayload) (res *AddExpenseResult, err error) {
	var ires any
	ires, err = c.AddExpenseEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*AddExpenseResult), nil
}
