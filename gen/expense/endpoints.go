// Code generated by goa v3.12.4, DO NOT EDIT.
//
// expense endpoints
//
// Command:
// $ goa gen github.com/chaewonkong/budget-planner/design/expense

package expense

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Endpoints wraps the "expense" service endpoints.
type Endpoints struct {
	AddExpense goa.Endpoint
}

// NewEndpoints wraps the methods of the "expense" service with endpoints.
func NewEndpoints(s Service) *Endpoints {
	return &Endpoints{
		AddExpense: NewAddExpenseEndpoint(s),
	}
}

// Use applies the given middleware to all the "expense" service endpoints.
func (e *Endpoints) Use(m func(goa.Endpoint) goa.Endpoint) {
	e.AddExpense = m(e.AddExpense)
}

// NewAddExpenseEndpoint returns an endpoint function that calls the method
// "AddExpense" of service "expense".
func NewAddExpenseEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		p := req.(*AddExpensePayload)
		return s.AddExpense(ctx, p)
	}
}
