// Code generated by goa v3.12.4, DO NOT EDIT.
//
// expense HTTP client types
//
// Command:
// $ goa gen github.com/chaewonkong/budget-planner/design/expense

package client

import (
	expense "github.com/chaewonkong/budget-planner/gen/expense"
)

// AddExpenseRequestBody is the type of the "expense" service "AddExpense"
// endpoint HTTP request body.
type AddExpenseRequestBody struct {
	// amount spent
	Amount float64 `form:"amount" json:"amount" xml:"amount"`
	// category
	Category string `form:"category" json:"category" xml:"category"`
	// memo
	Memo *string `form:"memo,omitempty" json:"memo,omitempty" xml:"memo,omitempty"`
}

// AddExpenseResponseBody is the type of the "expense" service "AddExpense"
// endpoint HTTP response body.
type AddExpenseResponseBody struct {
	// message
	Message *string `form:"message,omitempty" json:"message,omitempty" xml:"message,omitempty"`
}

// NewAddExpenseRequestBody builds the HTTP request body from the payload of
// the "AddExpense" endpoint of the "expense" service.
func NewAddExpenseRequestBody(p *expense.AddExpensePayload) *AddExpenseRequestBody {
	body := &AddExpenseRequestBody{
		Amount:   p.Amount,
		Category: p.Category,
		Memo:     p.Memo,
	}
	return body
}

// NewAddExpenseResultOK builds a "expense" service "AddExpense" endpoint
// result from a HTTP "OK" response.
func NewAddExpenseResultOK(body *AddExpenseResponseBody) *expense.AddExpenseResult {
	v := &expense.AddExpenseResult{
		Message: body.Message,
	}

	return v
}
