// Code generated by goa v3.12.4, DO NOT EDIT.
//
// expense HTTP server types
//
// Command:
// $ goa gen github.com/chaewonkong/budget-planner/design/expense

package server

import (
	expense "github.com/chaewonkong/budget-planner/gen/expense"
	goa "goa.design/goa/v3/pkg"
)

// AddExpenseRequestBody is the type of the "expense" service "AddExpense"
// endpoint HTTP request body.
type AddExpenseRequestBody struct {
	// amount spent
	Amount *float64 `form:"amount,omitempty" json:"amount,omitempty" xml:"amount,omitempty"`
	// category
	Category *string `form:"category,omitempty" json:"category,omitempty" xml:"category,omitempty"`
	// memo
	Memo *string `form:"memo,omitempty" json:"memo,omitempty" xml:"memo,omitempty"`
}

// AddExpenseResponseBody is the type of the "expense" service "AddExpense"
// endpoint HTTP response body.
type AddExpenseResponseBody struct {
	// message
	Message *string `form:"message,omitempty" json:"message,omitempty" xml:"message,omitempty"`
}

// NewAddExpenseResponseBody builds the HTTP response body from the result of
// the "AddExpense" endpoint of the "expense" service.
func NewAddExpenseResponseBody(res *expense.AddExpenseResult) *AddExpenseResponseBody {
	body := &AddExpenseResponseBody{
		Message: res.Message,
	}
	return body
}

// NewAddExpensePayload builds a expense service AddExpense endpoint payload.
func NewAddExpensePayload(body *AddExpenseRequestBody) *expense.AddExpensePayload {
	v := &expense.AddExpensePayload{
		Amount:   *body.Amount,
		Category: *body.Category,
		Memo:     body.Memo,
	}

	return v
}

// ValidateAddExpenseRequestBody runs the validations defined on
// AddExpenseRequestBody
func ValidateAddExpenseRequestBody(body *AddExpenseRequestBody) (err error) {
	if body.Amount == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("amount", "body"))
	}
	if body.Category == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("category", "body"))
	}
	return
}
