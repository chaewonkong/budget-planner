// Code generated by goa v3.12.4, DO NOT EDIT.
//
// ledger endpoints
//
// Command:
// $ goa gen github.com/chaewonkong/budget-planner/design/ledger --output
// gen/ledger

package ledger

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Endpoints wraps the "ledger" service endpoints.
type Endpoints struct {
	RecordExpense goa.Endpoint
}

// NewEndpoints wraps the methods of the "ledger" service with endpoints.
func NewEndpoints(s Service) *Endpoints {
	return &Endpoints{
		RecordExpense: NewRecordExpenseEndpoint(s),
	}
}

// Use applies the given middleware to all the "ledger" service endpoints.
func (e *Endpoints) Use(m func(goa.Endpoint) goa.Endpoint) {
	e.RecordExpense = m(e.RecordExpense)
}

// NewRecordExpenseEndpoint returns an endpoint function that calls the method
// "RecordExpense" of service "ledger".
func NewRecordExpenseEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		p := req.(*RecordExpensePayload)
		return nil, s.RecordExpense(ctx, p)
	}
}
