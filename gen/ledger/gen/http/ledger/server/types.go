// Code generated by goa v3.12.4, DO NOT EDIT.
//
// ledger HTTP server types
//
// Command:
// $ goa gen github.com/chaewonkong/budget-planner/design/ledger --output
// gen/ledger

package server

import (
	ledger "github.com/chaewonkong/budget-planner/gen/ledger/gen/ledger"
)

// NewRecordExpensePayload builds a ledger service RecordExpense endpoint
// payload.
func NewRecordExpensePayload(body struct {
	// amount spent
	Amount *float64 `form:"amount" json:"amount" xml:"amount"`
	// category
	Category *string `form:"category" json:"category" xml:"category"`
	// memo
	Memo *string `form:"memo" json:"memo" xml:"memo"`
}, userID int64) *ledger.RecordExpensePayload {
	v := &ledger.RecordExpensePayload{
		Memo: body.Memo,
	}
	if body.Amount != nil {
		v.Amount = *body.Amount
	}
	if body.Category != nil {
		v.Category = *body.Category
	}
	v.UserID = &userID

	return v
}
